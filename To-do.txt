## To do

# Extraction

- [DONE] Extract from the Gamebus API single data points of a single user of all needed game descriptors
- [DONE] Create well thought Gamebus API client to extract all needed data points of a single user
- Improve code, document and create an example notebook. 
- [DONE] Extraction by date (within a campaign) [MARTELADA]
- Extract only from most recent data point (more efficient) --- not MVP

# Categorization

- [DONE] Categorize a single location data point to Google Places API type. 
- [DONE] Categorize all location location data points and add type to the raw location data (enrichment)
- [DONE] Cache unique location point types with a given radius to reduce number of API calls (more efficient)
- [DONE] Improve code, document and create an example notebook. 
- Create db for cached uniques --- not MVP


# Transformation

- [DONE] Map GB data to OCED-mHealth meta model.

# Time Objects

- [DONE] Create methods to create time objest (day and week) for the oced mhealth data


# Loading OCED data

- [DONE] Create methods to load data from OCED-mHealth format as input to processing tasks
- Improve by querying already when parsing the json. This is more efficient. The current methods are to heavy on memory

# Toy Example 1

- Align accelerometer and heartrate signals
- Abstract physical activity level transition events based on acc and hr thresholds and window based techniques 
- Use markov model to smooth segmentation/ abstraction
- Enhance events with 1 to 3 contextual parameters
